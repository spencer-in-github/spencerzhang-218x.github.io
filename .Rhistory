TRUE ~ (pop_2020 - pop_2010)/pop_2010
)
nfo_pop_2010_2020$pop_perc = case_when(
nfo_pop_2010_2020$pop_2010 == 0 & !nfo_pop_2010_2020$pop_2020 == 0 ~100,
nfo_pop_2010_2020$pop_2010 == 0 & nfo_pop_2010_2020$pop_2020 == 0 ~0,
TRUE ~ (nfo_pop_2010_2020$pop_2020 - nfo_pop_2010_2020$pop_2010)/nfo_pop_2010_2020$pop_2010
)
unique(nfo_pop_2010_2020$pop_perc)
smc_pop_race_2020 <-
getCensus(
name = "dec/pl",
vintage = 2020,
region = "block:*",
regionin = "state:06+county:081",
vars = "group(P1)"
) %>%
mutate(
block =
paste0(state,county,tract,block)
) %>%
select(!c(GEO_ID,state,county,tract,NAME) & !ends_with(c("NA"))) %>%
pivot_longer(
ends_with("N"),
names_to = "name",
values_to = "estimate"
) %>%
left_join(
dec_vars_2020 %>%
select(name, label)
) %>%
select(-name) %>%
separate(
label,
into = c(NA,NA,"category1","category2"),
sep = "!!"
)
fc_boundary <- places("CA", progress_bar = F) %>%
filter(NAME == "Foster City")
fc_blocks_2010 <- blocks_2010 %>%
st_centroid() %>%
.[fc_boundary, ] %>%
st_drop_geometry() %>%
left_join(blocks_2010 %>% select(GEOID10, geometry)) %>%
st_as_sf() %>%
select(GEOID10) %>%
left_join(smc_pop_2010 %>% select(GEOID10, pop_2010))
mapview(fc_blocks_2010) + mapview(fc_blocks_2010, alpha.regions = 0, color = "red", lwd = 2)
fc_blocks_2020 <- blocks_2020 %>%
.[fc_boundary, ] %>%  #is nfo_boundary right?
select(GEOID20) %>%
left_join(smc_pop_2020)
fc_blocks_2020_intersect <- fc_blocks_2020 %>%
st_transform(26910) %>% #transform????
mutate(original_area = st_area(.)) %>%
st_intersection(
fc_blocks_2010 %>%
select(GEOID10) %>%
st_transform(26910)
) %>%
mutate(
leftover_area = st_area(.),
perc_area = as.numeric(leftover_area / original_area),
pop_2020 = pop_2020 * perc_area
)
fc_blocks_2020_reshaped <- fc_blocks_2020_intersect %>%
st_drop_geometry() %>%
group_by(GEOID10) %>%
summarize(
pop_2020 = sum(pop_2020, na.rm=T) %>% round()
)
projection <- "+proj=longlat +datum=WGS84 +units=ft +no_defs"
fc_pop_2010_2020 <- fc_blocks_2010 %>%
left_join(fc_blocks_2020_reshaped) %>%
mutate(
absolute_pop = (pop_2020 - pop_2010) / as.numeric(st_area(.)) * 5280^2 / 1000
)
rm(list= ls())
knitr::opts_chunk$set(warning = F, message = F)
library(tigris)
library(tidyverse)
library(sf)
library(mapview)
library(leaflet)
library(censusapi)
Sys.setenv(CENSUS_KEY="c8aa67e4086b4b5ce3a8717f59faa9a28f611dab")
knitr::opts_chunk$set(echo = F, warning = F, message = F)
library(tigris)
library(tidyverse)
library(sf)
library(mapview)
library(leaflet)
library(censusapi)
Sys.setenv(CENSUS_KEY="c8aa67e4086b4b5ce3a8717f59faa9a28f611dab")
dec_vars_2020 <-
listCensusMetadata(name = "2020/dec/pl",
type = "variables")
smc_pop_2020 <-
getCensus(name = "dec/pl",
vintage = 2020,
region = "block:*",
regionin = "state:06+county:081",
vars = "P1_001N") %>%
transmute(
GEOID20 = paste0(state,county,tract,block),
pop_2020 = P1_001N
)
blocks_2020 <- blocks("CA", "San Mateo", year = 2020, progress_bar = F)
fc_boundary <- places("CA", progress_bar = F) %>%
filter(NAME == "Foster City")
fc_blocks_2010 <- blocks_2010 %>%
st_centroid() %>%
.[fc_boundary, ] %>%
st_drop_geometry() %>%
left_join(blocks_2010 %>% select(GEOID10, geometry)) %>%
st_as_sf() %>%
select(GEOID10) %>%
left_join(smc_pop_2010 %>% select(GEOID10, pop_2010))
mapview(fc_blocks_2010) + mapview(fc_blocks_2010, alpha.regions = 0, color = "red", lwd = 2)
fc_boundary <- places("CA", progress_bar = F) %>%
filter(NAME == "Foster City")
fc_blocks_2010 <- blocks_2010 %>%
st_centroid() %>%
.[fc_boundary, ] %>%
st_drop_geometry() %>%
left_join(blocks_2010 %>% select(GEOID10, geometry)) %>%
st_as_sf() %>%
select(GEOID10) %>%
left_join(smc_pop_2010 %>% select(GEOID10, pop_2010))
blocks_2010 <- blocks("CA", "San Mateo", year = 2010, progress_bar = F)
fc_blocks_2010 <- blocks_2010 %>%
st_centroid() %>%
.[fc_boundary, ] %>%
st_drop_geometry() %>%
left_join(blocks_2010 %>% select(GEOID10, geometry)) %>%
st_as_sf() %>%
select(GEOID10) %>%
left_join(smc_pop_2010 %>% select(GEOID10, pop_2010))
dec_vars_2010 <-
listCensusMetadata(name = "2010/dec/pl",
type = "variables")
smc_pop_2010 <-
getCensus(name = "dec/pl",
vintage = 2010,
region = "block:*",
regionin = "state:06+county:081",
vars = "P001001") %>%
transmute(
GEOID10 = paste0(state,county,tract,block),
pop_2010 = P001001
)
blocks_2010 <- blocks("CA", "San Mateo", year = 2010, progress_bar = F)
fc_boundary <- places("CA", progress_bar = F) %>%
filter(NAME == "Foster City")
fc_blocks_2010 <- blocks_2010 %>%
st_centroid() %>%
.[fc_boundary, ] %>%
st_drop_geometry() %>%
left_join(blocks_2010 %>% select(GEOID10, geometry)) %>%
st_as_sf() %>%
select(GEOID10) %>%
left_join(smc_pop_2010 %>% select(GEOID10, pop_2010))
mapview(fc_blocks_2010) + mapview(fc_blocks_2010, alpha.regions = 0, color = "red", lwd = 2)
fc_blocks_2020 <- blocks_2020 %>%
.[fc_boundary, ] %>%  #is nfo_boundary right?
select(GEOID20) %>%
left_join(smc_pop_2020)
fc_blocks_2020_intersect <- fc_blocks_2020 %>%
st_transform(26910) %>% #transform????
mutate(original_area = st_area(.)) %>%
st_intersection(
fc_blocks_2010 %>%
select(GEOID10) %>%
st_transform(26910)
) %>%
mutate(
leftover_area = st_area(.),
perc_area = as.numeric(leftover_area / original_area),
pop_2020 = pop_2020 * perc_area
)
fc_blocks_2020_reshaped <- fc_blocks_2020_intersect %>%
st_drop_geometry() %>%
group_by(GEOID10) %>%
summarize(
pop_2020 = sum(pop_2020, na.rm=T) %>% round()
)
projection <- "+proj=longlat +datum=WGS84 +units=ft +no_defs"
fc_pop_2010_2020 <- fc_blocks_2010 %>%
left_join(fc_blocks_2020_reshaped) %>%
mutate(
absolute_pop = (pop_2020 - pop_2010) / as.numeric(st_area(.)) * 5280^2 / 1000
)
fc_pop_2010_2020$pop_perc = case_when(
fc_pop_2010_2020$pop_2010 == 0 & !fc_pop_2010_2020$pop_2020 == 0 ~100,
fc_pop_2010_2020$pop_2010 == 0 & fc_pop_2010_2020$pop_2020 == 0 ~0,
TRUE ~ (fc_pop_2010_2020$pop_2020 - fc_pop_2010_2020$pop_2010)/fc_pop_2010_2020$pop_2010
) #todo change this into pipeline
max <- max(abs(min(fc_pop_2010_2020$absolute_pop)), abs(max(fc_pop_2010_2020$absolute_pop)))
absolute_pal <- colorNumeric(
palette = "PiYG",
domain = c(-max,max)
)
leaflet(data = fc_pop_2010_2020) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~absolute_pal(absolute_pop),
label = ~round(as.numeric(geometry)),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1
) %>%
addLegend(
pal = absolute_pal,
value = c(-max,max),
title = "Population Density Change in North Fair Oaks City from 2010 to 2020")
??leaflet
leaflet(data = fc_pop_2010_2020, projection) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~absolute_pal(absolute_pop),
label = ~round(as.numeric(geometry)),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1
) %>%
addLegend(
pal = absolute_pal,
value = c(-max,max),
title = "Population Density Change in North Fair Oaks City from 2010 to 2020")
leaflet(data = fc_pop_2010_2020, projection) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~absolute_pal(absolute_pop),
label = ~round(as.numeric(geometry)),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1
) %>%
addLegend(
pal = absolute_pal,
value = c(-max,max),
title = "Population Density Change in North Fair Oaks City from 2010 to 2020")
leaflet(data = fc_pop_2010_2020, projection) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~absolute_pal(absolute_pop),
label = ~round(as.numeric(geometry)),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1
) %>%
addLegend(
pal = absolute_pal,
value = c(-max,max),
title = "Population Density Change in North Fair Oaks City from 2010 to 2020")
leaflet(data = fc_pop_2010_2020, projection) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~absolute_pal(absolute_pop),
label = ~round(as.numeric(geometry)),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1
) %>%
addLegend(
pal = absolute_pal,
value = c(-max,max),
title = "Population Density Change in Foster City from 2010 to 2020")
leaflet(data = fc_pop_2010_2020) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~absolute_pal(absolute_pop),
label = ~round(as.numeric(geometry)),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1
) %>%
addLegend(
pal = absolute_pal,
value = c(-max,max),
title = "Population Density Change in Foster City from 2010 to 2020")
leaflet(data = fc_pop_2010_2020) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~absolute_pal(absolute_pop),
label = ~round(as.numeric(geometry)),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1
) %>%
addLegend(
pal = absolute_pal,
value = c(-max,max),
title = "Population Density Change in Foster City from 2010 to 2020")
leaflet(data = fc_pop_2010_2020, proj4def = projection) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~absolute_pal(absolute_pop),
label = ~round(as.numeric(geometry)),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1
) %>%
addLegend(
pal = absolute_pal,
value = c(-max,max),
title = "Population Density Change in Foster City from 2010 to 2020")
leaflet(data = fc_pop_2010_2020) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~absolute_pal(absolute_pop),
label = ~round(as.numeric(geometry)),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1
) %>%
addLegend(
pal = absolute_pal,
value = c(-max,max),
title = "Population Density Change in Foster City from 2010 to 2020")
class(fc_pop_2010_2020)
max <- max(abs(min(fc_pop_2010_2020$absolute_pop)), abs(max(fc_pop_2010_2020$absolute_pop)))
absolute_pal <- colorNumeric(
palette = "PiYG",
domain = c(-max,max)
)
leaflet(data = fc_pop_2010_2020) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~absolute_pal(absolute_pop),
label = ~round(as.numeric(geometry)),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1
) %>%
addLegend(
pal = absolute_pal,
value = c(-max,max),
title = "Population Density Change in Foster City from 2010 to 2020")
names(fc_pop_2010_2020)
class(fc_pop_2010_2020$geometry)
as.numeric(fc_pop_2010_2020$geometry)
leaflet(data = fc_pop_2010_2020) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~absolute_pal(absolute_pop),
#label = ~round(as.numeric(geometry)),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1
) %>%
addLegend(
pal = absolute_pal,
value = c(-max,max),
title = "Population Density Change in Foster City from 2010 to 2020")
leaflet(data = fc_pop_2010_2020) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~absolute_pal(absolute_pop),
label = ~round(absolute_pop),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1
) %>%
addLegend(
pal = absolute_pal,
value = c(-max,max),
title = "Population Density Change in Foster City from 2010 to 2020")
perc_max <- max(abs(min(fc_pop_2010_2020$pop_perc)), abs(max(fc_pop_2010_2020$pop_perc)))
perc_pal <- colorNumeric(
palette = "PiYG",
domain = c(-perc_max,perc_max)
)
leaflet(data = fc_pop_2010_2020) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~perc_pal(pop_perc),
label = ~round(pop_perc),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1
) %>%
addLegend(
pal = perc_pal,
value = c(-perc_max,perc_max),
title = "Population Percentage Change in Foster City from 2010 to 2020")
smc_pop_race_2020 <-
getCensus(
name = "dec/pl",
vintage = 2020,
region = "block:*",
regionin = "state:06+county:081",
vars = "group(P1)"
) %>%
mutate(
block =
paste0(state,county,tract,block)
) %>%
select(!c(GEO_ID,state,county,tract,NAME) & !ends_with(c("NA"))) %>%
pivot_longer(
ends_with("N"),
names_to = "name",
values_to = "estimate"
) %>%
left_join(
dec_vars_2020 %>%
select(name, label)
) %>%
select(-name) %>%
separate(
label,
into = c(NA,NA,"category1","category2"),
sep = "!!"
)
names(smc_pop_race_2020)
head(smc_pop_race_2020)
smc_pop_race_2010 <-
getCensus(
name = "dec/pl",
vintage = 2010,
region = "block:*",
regionin = "state:06+county:081",
vars = "group(P1)"
) %>%
mutate(
block =
paste0(state,county,tract,block)
) %>%
select(!c(GEO_ID,state,county,tract,NAME) & !ends_with(c("NA"))) %>%
pivot_longer(
starts_with("P"),
names_to = "name",
values_to = "estimate"
) %>%
left_join(
dec_vars_2010 %>%
select(name, label)
) %>%
select(-name) %>%
separate(
label,
into = c(NA,NA,"category1","category2"),
sep = "!!"
)
names(smc_pop_race_2010)
unique(smc_pop_race_2010$category1)
unique(smc_pop_race_2010$category2)
unique(smc_pop_race_2020$category1)
unique(smc_pop_race_2020$category2)
unique(smc_pop_race_2010$block)
names(fc_pop_2010_2020)
head(fc_pop_2010_2020$GEOID10)
?st_intersection
t <- fc_blocks_2020 %>%
st_transform(26910) %>% #transform to a planar coordinate so that we can cut the area up
mutate(original_area = st_area(.)) %>%
st_intersection(
fc_blocks_2010 %>%
select(GEOID10) %>%
st_transform(26910)
)
names(t)
size(t)
length(t)
row_number(t)
dim(t)
dim(fc_blocks_2020)
names(fc_blocks_2020)
?mutate
names(fc_blocks_2020_intersect)
?summarize
names(fc_blocks_2020_reshaped)
dim(smc_pop_race_2010)
dim(smc_pop_2010)
??spread
names(smc_pop_race_2010)
unique(smc_pop_race_2010$category2)
unique(smc_pop_race_2010$category1)
t <- spread(smc_pop_race_2010, key = category1, val = estimate)
names(smc_pop_race_2010)
t <- spread(smc_pop_race_2010, key = c("block", "category1"), val = estimate)
??pivot_wider
t <- pivot_wider(smc_pop_race_2010, names_from = category1, values_from = estimate)
dim(t)
names(t)
head(t)
View(t)
unique(smc_pop_race_2010$estimate)
View(smc_pop_2010)
View(smc_pop_race_2010)
View(smc_pop_race_2020)
View(smc_pop_race_2010)
unique(smc_pop_race_2010$estimate)
unique(smc_pop_race_2020$estimate)
dim(dec_vars_2020)
names(dec_vars_2020)
unique(dec_vars_2020$name)
head(dec_vars_2020)
View(dec_vars_2010)
View(dec_vars_2020)
